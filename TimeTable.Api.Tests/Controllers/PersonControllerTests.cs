using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Mvc.Testing;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.IO;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;
using TimeTable.Api.Tests.Controllers.Base;
using TimeTable.Application.Constants;
using TimeTable.Business.ConstantValues;
using TimeTable.Business.Models;
using TimeTable.DataAccess;
using TimeTable.DataAccess.Contracts.Entities;

namespace TimeTable.Api.Tests.Controllers
{
    [TestClass]
    public class PersonControllerTests : BaseControllerTest
    {
        private static readonly string url = "/api/person";

        [TestMethod]
        public async Task Get_Unauthorized()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.EMPLOYEE);
            using HttpClient client = factory.CreateClient();

            PaginationRequest pagination = new PaginationRequest { PageSize = 2, PageNumber = 1 };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(pagination), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PostAsync($"{url}/items", content);

            Assert.AreEqual(System.Net.HttpStatusCode.Unauthorized, response.StatusCode);
        }

        [TestMethod]
        public async Task Get_NullBadRequest()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            using StringContent content = new StringContent(string.Empty, Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PostAsync($"{url}/items", content);

            Assert.AreEqual(System.Net.HttpStatusCode.BadRequest, response.StatusCode);
        }

        [TestMethod]
        public async Task Get_PageSizeTooSortBadRequest()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            PaginationRequest pagination = new PaginationRequest { PageSize = 0, PageNumber = 1 };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(pagination), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PostAsync($"{url}/items", content);

            Assert.AreEqual(System.Net.HttpStatusCode.BadRequest, response.StatusCode);
        }

        [TestMethod]
        public async Task Get_PageSizeTooLongBadRequest()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            PaginationRequest pagination = new PaginationRequest { PageSize = 101, PageNumber = 1 };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(pagination), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PostAsync($"{url}/items", content);

            Assert.AreEqual(System.Net.HttpStatusCode.BadRequest, response.StatusCode);
        }

        [TestMethod]
        public async Task Get_Ok()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            PaginationRequest pagination = new PaginationRequest { PageSize = 2, PageNumber = 1 };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(pagination), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PostAsync($"{url}/items", content);

            Assert.AreEqual(System.Net.HttpStatusCode.OK, response.StatusCode);
        }

        [TestMethod]
        public async Task GetById_Unauthorized()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.EMPLOYEE);
            using HttpClient client = factory.CreateClient();

            using HttpResponseMessage response = await client.GetAsync($"{url}/items/1");

            Assert.AreEqual(System.Net.HttpStatusCode.Unauthorized, response.StatusCode);
        }

        [TestMethod]
        public async Task GetById_NotFound()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            using HttpResponseMessage response = await client.GetAsync($"{url}/items/1456");

            Assert.AreEqual(System.Net.HttpStatusCode.NotFound, response.StatusCode);
        }

        [TestMethod]
        public async Task GetById_Ok()
        {
            string dbContextName = Guid.NewGuid().ToString();
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(dbContextName, RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            using HttpResponseMessage response = await client.GetAsync($"{url}/items/1");

            Assert.AreEqual(System.Net.HttpStatusCode.OK, response.StatusCode);
        }

        [TestMethod]
        public async Task GetOwn_Unauthorized()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), null);
            using HttpClient client = factory.CreateClient();

            using HttpResponseMessage response = await client.GetAsync($"{url}/ownItem");

            Assert.AreEqual(System.Net.HttpStatusCode.Unauthorized, response.StatusCode);
        }

        [TestMethod]
        public async Task GetOwn_Ok()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.EMPLOYEE);
            using HttpClient client = factory.CreateClient();

            using HttpResponseMessage response = await client.GetAsync($"{url}/ownItem");

            Assert.AreEqual(System.Net.HttpStatusCode.OK, response.StatusCode);
        }

        [TestMethod]
        public async Task Post_Unauthorized()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.EMPLOYEE);
            using HttpClient client = factory.CreateClient();

            CreatingPerson creatingPerson = new CreatingPerson 
            { 
                Name = "Test", 
                Email = "test@test.com",
                Password = "1234_Test",
                Role = Role.Employee,
                Picture = Convert.FromBase64String("")
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(creatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PostAsync(url, content);

            Assert.AreEqual(System.Net.HttpStatusCode.Unauthorized, response.StatusCode);
        }

        [TestMethod]
        public async Task Post_NullBadRequest()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            using StringContent content = new StringContent(String.Empty, Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PostAsync(url, content);

            Assert.AreEqual(System.Net.HttpStatusCode.BadRequest, response.StatusCode);
        }

        [TestMethod]
        public async Task Post_NameBadRequest()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            CreatingPerson creatingPerson = new CreatingPerson
            {
                Name = "abc",
                Email = "test@test.com",
                Password = "1234_Test",
                Role = Role.Employee,
                Picture = Convert.FromBase64String("")
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(creatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PostAsync(url, content);

            Assert.AreEqual(System.Net.HttpStatusCode.BadRequest, response.StatusCode);
        }

        [TestMethod]
        public async Task Post_RoleBadRequest()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            CreatingPerson creatingPerson = new CreatingPerson
            {
                Name = "abc",
                Email = "test@test.com",
                Password = "1234_Test",
                Picture = Convert.FromBase64String("")
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(creatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PostAsync(url, content);

            Assert.AreEqual(System.Net.HttpStatusCode.BadRequest, response.StatusCode);
        }

        [TestMethod]
        public async Task Post_EmailBadRequest()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            CreatingPerson creatingPerson = new CreatingPerson
            {
                Name = "Test",
                Email = "test",
                Password = "1234_Test",
                Role = Role.Employee,
                Picture = Convert.FromBase64String("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")
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(creatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PostAsync(url, content);

            Assert.AreEqual(System.Net.HttpStatusCode.BadRequest, response.StatusCode);
        }

        [TestMethod]
        public async Task Post_PasswordBadRequest()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            CreatingPerson creatingPerson = new CreatingPerson
            {
                Name = "Test",
                Email = "test@test.com",
                Password = String.Empty,
                Role = Role.Employee,
                Picture = Convert.FromBase64String("")
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(creatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PostAsync(url, content);

            Assert.AreEqual(System.Net.HttpStatusCode.BadRequest, response.StatusCode);
        }

        [TestMethod]
        public async Task Post_Ok()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            CreatingPerson creatingPerson = new CreatingPerson
            {
                Name = "Test",
                Email = "test@test.com",
                Password = "1234_Test",
                Role = Role.Employee,
                Picture = Convert.FromBase64String("")
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(creatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PostAsync(url, content);
            dynamic result = JObject.Parse(await response.Content.ReadAsStringAsync());

            Assert.AreEqual(System.Net.HttpStatusCode.Created, response.StatusCode);
            Assert.IsTrue(result.id > 0);
        }

        [TestMethod]
        public async Task Put_Unauthorized()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), null);
            using HttpClient client = factory.CreateClient();

            UpdatingPerson updatingPerson = new UpdatingPerson
            {
                Id = PeopleInfo.EmployeeId,
                Name = "Employee updated",
                RowVersion = PeopleInfo.EmployeeRowVersion,
                Picture = Convert.FromBase64String("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")
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(updatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync(url, content);

            Assert.AreEqual(System.Net.HttpStatusCode.Unauthorized, response.StatusCode);
        }

        [TestMethod]
        public async Task Put_NullBadRequest()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.EMPLOYEE);
            using HttpClient client = factory.CreateClient();

            using StringContent content = new StringContent(String.Empty, Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync(url, content);

            Assert.AreEqual(System.Net.HttpStatusCode.BadRequest, response.StatusCode);
        }

        [TestMethod]
        public async Task Put_NameBadRequest()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.EMPLOYEE);
            using HttpClient client = factory.CreateClient();

            UpdatingPerson updatingPerson = new UpdatingPerson
            {
                Id = PeopleInfo.EmployeeId,
                Name = "123",
                RowVersion = PeopleInfo.EmployeeRowVersion,
                Picture = Convert.FromBase64String("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")
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(updatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync(url, content);

            Assert.AreEqual(System.Net.HttpStatusCode.BadRequest, response.StatusCode);
        }

        [TestMethod]
        public async Task Put_Forbiden()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            UpdatingPerson updatingPerson = new UpdatingPerson
            {
                Id = PeopleInfo.EmployeeId,
                Name = "Employee updated",
                RowVersion = PeopleInfo.EmployeeRowVersion,
                Picture = Convert.FromBase64String("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")
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(updatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync(url, content);

            Assert.AreEqual(System.Net.HttpStatusCode.Forbidden, response.StatusCode);
        }

        [TestMethod]
        public async Task Put_Conflict()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.EMPLOYEE);
            using HttpClient client = factory.CreateClient();

            Random rnd = new Random();
            Byte[] rndRowVersion = new Byte[8];
            rnd.NextBytes(rndRowVersion);
            UpdatingPerson updatingPerson = new UpdatingPerson
            {
                Id = PeopleInfo.EmployeeId,
                Name = "Employee updated",
                RowVersion = rndRowVersion,
                Picture = Convert.FromBase64String("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")
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(updatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync(url, content);
            CustomError result = JsonConvert.DeserializeObject<CustomError>(await response.Content.ReadAsStringAsync());

            Assert.AreEqual(System.Net.HttpStatusCode.Conflict, response.StatusCode);
            Assert.AreEqual(ErrorCodes.CONCURRENCY_ERROR, result.error_code);
        }

        [TestMethod]
        public async Task Put_Ok()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.EMPLOYEE);
            using HttpClient client = factory.CreateClient();

            UpdatingPerson creatingPerson = new UpdatingPerson
            {
                Id = PeopleInfo.EmployeeId,
                Name = "Employee updated",
                RowVersion = PeopleInfo.EmployeeRowVersion,
                Picture = Convert.FromBase64String("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")
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(creatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync(url, content);

            Assert.AreEqual(System.Net.HttpStatusCode.NoContent, response.StatusCode);
        }










        [TestMethod]
        public async Task PutRole_Unauthorized()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.EMPLOYEE);
            using HttpClient client = factory.CreateClient();

            UpdatingPersonRole updatingPerson = new UpdatingPersonRole
            {
                Id = PeopleInfo.EmployeeId,
                Role = Role.Admin,
                RowVersion = PeopleInfo.EmployeeRowVersion
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(updatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync($"{ url}/role", content);

            Assert.AreEqual(System.Net.HttpStatusCode.Unauthorized, response.StatusCode);
        }

        [TestMethod]
        public async Task PutRole_NullBadRequest()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            using StringContent content = new StringContent(String.Empty, Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync($"{ url}/role", content);

            Assert.AreEqual(System.Net.HttpStatusCode.BadRequest, response.StatusCode);
        }

        [TestMethod]
        public async Task PutRole_RoleBadRequest()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            UpdatingPersonRole updatingPerson = new UpdatingPersonRole
            {
                Id = PeopleInfo.EmployeeId,
                RowVersion = PeopleInfo.EmployeeRowVersion
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(updatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync($"{ url}/role", content);
            CustomError result = JsonConvert.DeserializeObject<CustomError>(await response.Content.ReadAsStringAsync());

            Assert.AreEqual(System.Net.HttpStatusCode.Conflict, response.StatusCode);
            Assert.AreEqual(ErrorCodes.INVALID_ROLE, result.error_code);
        }

        [TestMethod]
        public async Task PutRole_Conflict()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            Random rnd = new Random();
            Byte[] rndRowVersion = new Byte[8];
            rnd.NextBytes(rndRowVersion);
            UpdatingPersonRole updatingPerson = new UpdatingPersonRole
            {
                Id = PeopleInfo.EmployeeId,
                Role = Role.Admin,
                RowVersion = rndRowVersion
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(updatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync($"{ url}/role", content);
            CustomError result = JsonConvert.DeserializeObject<CustomError>(await response.Content.ReadAsStringAsync());

            Assert.AreEqual(System.Net.HttpStatusCode.Conflict, response.StatusCode);
            Assert.AreEqual(ErrorCodes.CONCURRENCY_ERROR, result.error_code);
        }

        [TestMethod]
        public async Task PutRole_Ok()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            UpdatingPersonRole creatingPerson = new UpdatingPersonRole
            {
                Id = PeopleInfo.EmployeeId,
                Role = Role.Admin,
                RowVersion = PeopleInfo.EmployeeRowVersion
            };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(creatingPerson), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync($"{ url}/role", content);

            Assert.AreEqual(System.Net.HttpStatusCode.NoContent, response.StatusCode);
        }






        [TestMethod]
        public async Task Delete_Unauthorized()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.EMPLOYEE);
            using HttpClient client = factory.CreateClient();

            Random rnd = new Random();
            Byte[] rndRowVersion = new Byte[8];
            rnd.NextBytes(rndRowVersion);
            DeleteRequest deleteRequest = new DeleteRequest { Id = PeopleInfo.AdminId, RowVersion = rndRowVersion };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(deleteRequest), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync($"{url}/delete", content);
            
            Assert.AreEqual(System.Net.HttpStatusCode.Unauthorized, response.StatusCode);
        }

        [TestMethod]
        public async Task Delete_IsDefaultConflict()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            DeleteRequest deleteRequest = new DeleteRequest { Id = PeopleInfo.AdminId, RowVersion = PeopleInfo.AdminRowVersion };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(deleteRequest), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync($"{url}/delete", content);

            CustomError result = JsonConvert.DeserializeObject<CustomError>(await response.Content.ReadAsStringAsync());

            Assert.AreEqual(System.Net.HttpStatusCode.Conflict, response.StatusCode);
            Assert.AreEqual(ErrorCodes.PERSON_DEFAULT, result.error_code);
        }

        [TestMethod]
        public async Task Delete_Conflict()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            Random rnd = new Random();
            Byte[] rndRowVersion = new Byte[8];
            rnd.NextBytes(rndRowVersion);
            DeleteRequest deleteRequest = new DeleteRequest { Id = PeopleInfo.EmployeeId, RowVersion = rndRowVersion };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(deleteRequest), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync($"{url}/delete", content);

            CustomError result = JsonConvert.DeserializeObject<CustomError>(await response.Content.ReadAsStringAsync());

            Assert.AreEqual(System.Net.HttpStatusCode.Conflict, response.StatusCode);
            Assert.AreEqual(ErrorCodes.CONCURRENCY_ERROR, result.error_code);
        }

        [TestMethod]
        public async Task Delete_Ok()
        {
            string dbContextName = Guid.NewGuid().ToString();
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(dbContextName, RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();
            using TimeTableDbContext timeTableContext = BuildContext(dbContextName);
            var person = await AddTestPerson(factory, timeTableContext);

            DeleteRequest deleteRequest = new DeleteRequest { Id = person.Id, RowVersion = person.RowVersion };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(deleteRequest), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync($"{url}/delete", content);

            Assert.AreEqual(System.Net.HttpStatusCode.NoContent, response.StatusCode);
        }

        [TestMethod]
        public async Task DeleteOwn_Unauthorized()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), null);
            using HttpClient client = factory.CreateClient();

            Random rnd = new Random();
            Byte[] rndRowVersion = new Byte[8];
            rnd.NextBytes(rndRowVersion);
            DeleteRequest deleteRequest = new DeleteRequest { Id = PeopleInfo.EmployeeId, RowVersion = rndRowVersion };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(deleteRequest), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync($"{url}/deleteOwn", content);
            CustomError result = JsonConvert.DeserializeObject<CustomError>(await response.Content.ReadAsStringAsync());

            Assert.AreEqual(System.Net.HttpStatusCode.Unauthorized, response.StatusCode);
        }

        [TestMethod]
        public async Task DeleteOwn_Conflict()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.ADMIN);
            using HttpClient client = factory.CreateClient();

            Random rnd = new Random();
            Byte[] rndRowVersion = new Byte[8];
            rnd.NextBytes(rndRowVersion);
            DeleteRequest deleteRequest = new DeleteRequest { Id = PeopleInfo.AdminId, RowVersion = rndRowVersion };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(deleteRequest), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync($"{url}/deleteOwn", content);
            CustomError result = JsonConvert.DeserializeObject<CustomError>(await response.Content.ReadAsStringAsync());

            Assert.AreEqual(System.Net.HttpStatusCode.Conflict, response.StatusCode);
            Assert.AreEqual(ErrorCodes.PERSON_DEFAULT, result.error_code);
        }

        [TestMethod]
        public async Task DeleteOwn_Ok()
        {
            using WebApplicationFactory<Startup> factory = await BuildWebApplicationFactory(Guid.NewGuid().ToString(), RolesConsts.EMPLOYEE);
            using HttpClient client = factory.CreateClient();

            DeleteRequest deleteRequest = new DeleteRequest { Id = PeopleInfo.EmployeeId, RowVersion = PeopleInfo.EmployeeRowVersion };
            using StringContent content = new StringContent(JsonConvert.SerializeObject(deleteRequest), Encoding.UTF8, "application/json");
            using HttpResponseMessage response = await client.PutAsync($"{url}/deleteOwn", content);
            CustomError result = JsonConvert.DeserializeObject<CustomError>(await response.Content.ReadAsStringAsync());

            Assert.AreEqual(System.Net.HttpStatusCode.NoContent, response.StatusCode);
        }

        private async Task<PersonEntity> AddTestPerson(WebApplicationFactory<Startup> factory, TimeTableDbContext context)
        {
            using var scope = factory.Services.CreateScope();
            IServiceProvider serviceProvider = scope.ServiceProvider;
            using UserManager<IdentityUser> userManager = serviceProvider.GetService<UserManager<IdentityUser>>();

            IdentityUser user = new IdentityUser
            {
                UserName = "Test",
                Email = "test@test.com",
            };

            await userManager.CreateAsync(user, Constants.AdminPassword);
            await userManager.AddToRoleAsync(user, RolesConsts.EMPLOYEE);

            string userId = await userManager.GetUserIdAsync(user);
            var person = new PersonEntity() { Name = "Test", UserId = userId, IsDefault = false };
            await context.People.AddAsync(person);

            await context.SaveChangesAsync();
            context.ChangeTracker.Clear();

            return person;
        }
    }
}
